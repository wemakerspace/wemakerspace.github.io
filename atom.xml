<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://wemaker.space</id>
    <title>Tech with Jin - JIN ç§‘æŠ€</title>
    <updated>2021-09-10T02:30:20.996Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://wemaker.space"/>
    <link rel="self" href="https://wemaker.space/atom.xml"/>
    <subtitle>æ¸©æ•…è€ŒçŸ¥æ–°</subtitle>
    <logo>https://wemaker.space/images/avatar.png</logo>
    <icon>https://wemaker.space/favicon.ico</icon>
    <rights>All rights reserved 2021, Tech with Jin - JIN ç§‘æŠ€</rights>
    <entry>
        <title type="html"><![CDATA[HAMY - Zigbee CC2652P Adapter]]></title>
        <id>https://wemaker.space/post/hamy-zigbee-cc2652p-adapter/</id>
        <link href="https://wemaker.space/post/hamy-zigbee-cc2652p-adapter/">
        </link>
        <updated>2021-09-09T16:05:29.000Z</updated>
        <content type="html"><![CDATA[<h1 id="features">Features:</h1>
<ul>
<li>TI CC2652P SimpleLinkâ„¢ 2.4 GHz Multiprotocol Wireless MCU targeting Zigbee,Bluetooth 5.1 Low Energy,Thread + 19.5-dBm high-power amplifier</li>
<li>2 LED for indication</li>
<li>Compatible with Zigbee2MQTT</li>
<li>SMA antenna port for an external antenna (come with 3dBi ducktail Antenna)</li>
<li>Hold FLASH button and plug in to enter flashing mode.</li>
<li>Communicates via the common CH340C USB-UART Bridge</li>
<li>Plug &amp; Play, comes pre-flashed</li>
<li>Firmware default TX Power is 20dBm, you can set it lower in zigbee2mqtt.</li>
</ul>
<h1 id="firmware">Firmware:</h1>
<p>The Zigbee Adapter is compatible and tested with <a href="https://www.zigbee2mqtt.io/">Z2M</a>. You can use it with <a href="https://www.home-assistant.io/integrations/zha/">ZHA</a> but you are on your own.</p>
<p>Device come flash with Egony latest <a href="https://github.com/egony/cc2652p_E72-2G4M20S1E/raw/master/firmware/coordinator/CC2652P_E72_20210901.zip">firmware</a><br>
You can also flash with Z2M Koenkk <a href="https://github.com/Koenkk/Z-Stack-firmware/raw/master/coordinator/Z-Stack_3.x.0/bin/CC1352P2_CC2652P_other_coordinator_20210708.zip">firmware</a></p>
<p>If you intend to flash it to use as router, please use this <a href="https://github.com/egony/cc2652p_E72-2G4M20S1E/raw/master/firmware/router/router_CC2652P_E72_20210812.zip">router firmware</a></p>
<h1 id="how-to-use">How to Use</h1>
<h2 id="haossupervised">HAOS/Supervised</h2>
<p>Plug in the USB to the HAOS server (Don't use USB3.0 Port if possible)</p>
<p><code>Supervisor -&gt; System -&gt; Host -&gt; 3 Dot -&gt; Hardware</code></p>
<p>Check if <code>ttyUSB0</code> is appeared in there and have the attributes</p>
<h2 id="vmdocker-on-windows">VM/Docker on Windows</h2>
<p>Download the WCH CH340 <a href="http://www.wch-ic.com/downloads/file/65.html">Driver</a><br>
Install the driver.</p>
<p>Plug in the USB to the computer (Don't use USB3.0 Port if possible)<br>
Make sure you enable USB passthrough in the VM.</p>
<p><code>Supervisor -&gt; System -&gt; Host -&gt; 3 Dot -&gt; Hardware</code></p>
<p>Check if <code>ttyUSB0</code> is appeared in there and have the attributes.</p>
<p>#Zigbee2MQTT Installation</p>
<p><code>Supervisor -&gt; Add-on Store -&gt; 3 Dot -&gt; Repositories -&gt; Add</code></p>
<p>Please add <code>https://github.com/zigbee2mqtt/hassio-zigbee2mqtt</code></p>
<p>The Zigbee2MQTT addon will be appear in Add-on Store.</p>
<p>Press Install to install the Z2M addon.</p>
<p>Once installation is complete, don't start the Add-on yet.</p>
<p>Go to <code>Configuration</code> tab in <code>Zigbee2MQTT</code> Addon page.</p>
<p>Find the entry say:</p>
<pre><code>serial:
  port: /dev/ttyACM0
</code></pre>
<p>Change it to this:</p>
<pre><code>serial:
  port: /dev/ttyUSB0
</code></pre>
<p>Once done, you can start the Addon.</p>
<p>If the log indicate the Z2M run successfully, you can click <code>Open Web UI</code> to open the Z2M Management page.</p>
<p>Under <code>Settings -&gt; About</code>, you should see your HAMY Zigbee Adapter detail:<br>
<img src="https://wemaker.space/post-images/1631239721530.png" alt="" loading="lazy"></p>
<p>You can now press <code>Permit Join (All)</code> button at the top right to start adding all your Zigbee device ðŸ˜œ</p>
<p>More info can be found <a href="https://www.zigbee2mqtt.io/getting_started/running_zigbee2mqtt.html">here</a></p>
<h1 id="updating-to-latest-firmware">Updating to latest firmware</h1>
<p>Go TI's website and download the <a href="https://www.ti.com/tool/FLASH-PROGRAMMER">Flash Programmer v2</a></p>
<p>Press and hold the <code>FLASH</code> button on the HAMY Zigbee Adapter, then plug into your PC USB port. Release the button 2 sec after plug in.</p>
<p>Make sure your PC have already install the WCH CH340 <a href="http://www.wch-ic.com/downloads/file/65.html">Driver</a></p>
<p>You should able to see the USB-SERIAL CH340 pop up in your <code>Device Manager</code></p>
<p>Open TI Flash Programmer v2, you should see the COM port of USB-SERIAL CH340 have been listed at the left.</p>
<p>Click the <code>UNKNOWN</code> device, and select CC2652P<br>
<img src="https://wemaker.space/post-images/1631240473814.png" alt="" loading="lazy"></p>
<p>Browse the firmware you intend to flash .<br>
<code>Please don't use other firmware as it will disable the USB Bootloader function and you need to JTAG to unbrick it</code></p>
<p>Please ensure the Actions page is choose same as the picture below.<br>
<img src="https://wemaker.space/post-images/1631240687853.png" alt="" loading="lazy"></p>
<p>Press the PLAY button to start flashing.<br>
<img src="https://wemaker.space/post-images/1631240721247.png" alt="" loading="lazy"></p>
<p>Remove the HAMY Zigbee Adapter and plug into the HA, you should notice the version change accordingly to the firmware you flash.</p>
<figure data-type="image" tabindex="1"><img src="https://wemaker.space/post-images/1631240810345.png" alt="" loading="lazy"></figure>
<p>#Z2M NVMEM Restore Failure</p>
<h2 id="clearing-the-coordinator-memory">Clearing the coordinator memory</h2>
<p>During the flashing process, the coordinator's memory (NVMEM) may contain arbitrary data, which may in some cases prevent NVMEM recovery from the zigbee2mqtt backup.</p>
<p>The coordinator's memory is cleared by the zStackEraseAllNvMem.js script, which is usually located in this directory:</p>
<p><code>/opt/zigbee2mqtt/scripts</code><br>
The command line will look something like this:</p>
<p><code>node zStackEraseAllNvMem.js /dev/ttyUSB0</code><br>
At the end of the flashing, you may need to unplug-plug the stick into USB to try again.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[My Thought - Common Zigbee Network Module]]></title>
        <id>https://wemaker.space/post/my-thought-common-zigbee-network-module/</id>
        <link href="https://wemaker.space/post/my-thought-common-zigbee-network-module/">
        </link>
        <updated>2021-08-10T01:43:52.000Z</updated>
        <summary type="html"><![CDATA[<p>There so many Zigbee device out there in the market. Which one of them is better? What technology stack they use? Here is my research on the common Zigbee module that you can from the market. ðŸ¤—</p>
]]></summary>
        <content type="html"><![CDATA[<p>There so many Zigbee device out there in the market. Which one of them is better? What technology stack they use? Here is my research on the common Zigbee module that you can from the market. ðŸ¤—</p>
<!-- more -->
<h1 id="sonoff-zigbee-product">Sonoff Zigbee Product</h1>
<figure data-type="image" tabindex="1"><img src="https://wemaker.space/post-images/1628560677261.jpg" alt="" loading="lazy"></figure>
<h2 id="chipset-design">Chipset design:</h2>
<p>Sonoff Zigbee module (all the 4 type out there except the bridge) using the super old 2009 TI-2530 chip.</p>
<p>CC2530 CPU is 8051 8 bit, 8KB flash. With -97dBm sensitivity and max 4.5dBm output.</p>
<p>Looking at the power saving feature, Zigbee RX power consumption is 25mA. TX power is 35mA @ 4.5dBm.<br>
even at low power mode, CC2530 is around 400nA.</p>
<h2 id="board-design">Board design:</h2>
<p>The capacitor is a bit small, mean the sustainable transmit rate will be lower too if you use low quality CR2032 battery.</p>
<p>Next the antenna design is not optimized, there are a weird corner at the beginning of the track.</p>
<p>The test point also seem to be just testing the board function only and no JTAG connection. Mean the CC2530 firmware was burn in before solder.</p>
<h2 id="firmware">Firmware:</h2>
<p>Due to very little flash size left, you only using Zigbee HA 1.2 feature. And very limited firmware feature can be put inside there. It really just a basic unit.</p>
<h2 id="verdict">Verdict:</h2>
<p><strong>Pro:</strong> Cheap. Locally available.<br>
<strong>Con:</strong> using older 8 bit chipset, limited function, battery life around 0.5-1 year.</p>
<h1 id="aqara-zigbee-product-lumi">Aqara Zigbee Product (Lumi)</h1>
<figure data-type="image" tabindex="2"><img src="https://wemaker.space/post-images/1628560794731.jpg" alt="" loading="lazy"></figure>
<h2 id="chipset-design-2">Chipset design:</h2>
<p>Aqara sensor use NXP JN5169 chip. They also been doing this longer time using NXP chip since their first product (Lumi in China)</p>
<p>NXP JN5169 is a 32 bit RISC chip, 32KB ram and 512KB Flash with max 10dBm output.<br>
Looking at the power saving feature, Zigbee RX power consumption is 13mA. TX power is 20mA @ 10dBm.</p>
<p>At low power mode, JN5169 is around 120nA.</p>
<p>The battery atleast can last 3 time longer and range is 2-3 time better.</p>
<h2 id="broad-design">Broad design:</h2>
<p>CE tested board, RoHS certified with lot of test pin.</p>
<p>Proper 2.4GHz optimized antenna (patented). Beefy tantalum capacitor. Come with Panasonic CR2032.</p>
<p>A much bigger crystal also suggest more stable operation. And JN5169 have build in temperature probe (not accurate)</p>
<p>The board is fully tested and the JTAG pinout at the back suggest this board firmware is loaded after manufacturing.</p>
<h2 id="firmware-2">Firmware:</h2>
<p>With the upgrade of Aqara Gateway M2, all Aqara devuce can use Zigbee 3.0 now.</p>
<p>Due to bigger flash size, more firmware feature can be write in. And Aqara update their firmware quite frequent.</p>
<h2 id="verdict-2">Verdict:</h2>
<p><strong>Pro:</strong> Long range, long battery life (2 year), more stable<br>
<strong>Con:</strong> Slightly expensive. earlier NXP firmware don't play well with CC2530 based router. Now better d.</p>
<h1 id="tuya-zigbee-product">Tuya Zigbee Product</h1>
<figure data-type="image" tabindex="3"><img src="https://wemaker.space/post-images/1628561306940.jpg" alt="" loading="lazy"></figure>
<h2 id="chipset-design-3">Chipset design:</h2>
<p>They have quite a number of module using different MCU.</p>
<p>I had see the latest one using silabs EFR32 ARM-M33 one, that one quite powerful MCU but the firmware is the same limited feature with their lower end module. I already reserved that to hack my own EMBERNET Z-stack on it rather than the Tuya OS.</p>
<p>The common module TYZS1L/TYZS4/TYZS5 are all Silicon labs EFR32 model. but all have different ram / flash side.</p>
<p>Running on Arm cortex M4 core, they are quite powerful, however, the way Tuya RTOS run on top of them mean their feature will be limited.</p>
<h2 id="board-design-2">Board design:</h2>
<p>Manufacturer will buy Tuya module, and follow a fixed tuya API they can use to talk to the device. So power saving feature or extra functionality is pretty much not existed here.</p>
<p>They do however has a faster hardware and the antenna tuning seem to be much better on newer module.</p>
<h2 id="firmware-3">Firmware:</h2>
<p>Manufacturer can't really change much of the Tuya RTOS design as they purchase from Tuya the module loaded with default firmware.</p>
<p>My main concern is, even tuya make good Zigbee communication device, it doesn't mean the build quality of the rest of the product will be good as well. I seem many low quality tuya product been made. Tuya only supply the network module and the cloud service, the rest of the hardware and testing is done by the manufacturer themselves. And most of them is bad.</p>
<h2 id="verdict-3">Verdict:</h2>
<p><strong>Pro:</strong> Many kind of device. Work on Tuya ecosystem. Pretty okay Network range.<br>
<strong>Con:</strong> Not custom feature, bad quality product. U dunno which version of Tuya module you get and very low chance get firmware update.</p>
]]></content>
    </entry>
</feed>